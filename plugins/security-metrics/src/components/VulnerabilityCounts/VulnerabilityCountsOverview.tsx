import { RepositorySummary, Repository } from '../../typesFrontend';
import { CardTitle } from '../CardTitle';
import {
  aggregateSeverityCounts,
  getTotalVulnerabilityCount,
} from '../../mapping/getSeverityCounts';
import {
  Cell,
  Label,
  Legend,
  Pie,
  PieChart,
  ResponsiveContainer,
} from 'recharts';
import {
  getSeverityColor,
  getStandardSeverityFormat,
  SEVERITY_ORDER,
} from '../utils';
import ThumbUpIcon from '@mui/icons-material/ThumbUp';
import Box from '@mui/material/Box';
import { useTheme } from '@mui/material/styles';
import Typography from '@mui/material/Typography';

type Props = { data: RepositorySummary[] | Repository };

export const VulnerabilityCountsOverview = ({ data }: Props) => {
  const theme = useTheme();
  const items: (RepositorySummary | Repository)[] = Array.isArray(data)
    ? data
    : [data];

  const counts = aggregateSeverityCounts(items, r => r.severityCount);
  const total = getTotalVulnerabilityCount(counts);

  const chartData = SEVERITY_ORDER.map(sev => ({
    key: sev,
    name: getStandardSeverityFormat(sev),
    value: counts[sev] ?? 0,
  })).filter(d => d.value > 0);

  return (
    <CardTitle title="Sårbarheter">
      {total === 0 ? (
        <Box
          display="flex"
          flexDirection="column"
          alignItems="center"
          justifyContent="center"
          height="100%"
          mb={5}
          aria-label="Ingen sårbarheter funnet"
        >
          <ThumbUpIcon color="success" fontSize="large" sx={{ mb: 1 }} />
          <Typography fontWeight={500}>Ingen sårbarheter funnet</Typography>
        </Box>
      ) : (
        <ResponsiveContainer width="95%" height="100%">
          <PieChart>
            <Pie
              data={chartData}
              dataKey="value"
              nameKey="name"
              innerRadius={70}
              outerRadius={90}
              stroke="transparent"
            >
              {chartData.map(d => (
                <Cell key={d.key} fill={getSeverityColor(d.key)} />
              ))}
              <Label
                position="center"
                value={total}
                style={{
                  fontSize: '28px',
                  fill: theme.palette.text.primary,
                }}
              />
            </Pie>
            <Legend
              layout="vertical"
              align="right"
              verticalAlign="middle"
              iconType="circle"
              iconSize={15}
              formatter={(value: string, entry: any) => (
                <Typography
                  style={{
                    display: 'inline-flex',
                    justifyContent: 'space-between',
                    minWidth: '125px',
                    marginTop: 5,
                    color: theme.palette.text.primary,
                  }}
                >
                  <Typography>{value}</Typography>
                  <Typography style={{ fontWeight: 500 }}>
                    {entry?.payload?.value}
                  </Typography>
                </Typography>
              )}
            />
          </PieChart>
        </ResponsiveContainer>
      )}
    </CardTitle>
  );
};
