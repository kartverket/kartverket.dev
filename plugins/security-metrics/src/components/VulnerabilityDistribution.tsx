import { Box } from '@mui/system';
import { SEVERITY_COLORS } from '../colors';
import { getTotalVulnerabilityCount } from '../mapping/getSeverityCounts';
import { SeverityCount } from '../typesFrontend';
import Tooltip from '@mui/material/Tooltip';

type Props = {
  severityCount: SeverityCount;
  highestVulnerabilityCount: number;
};

export const VulnerabilityDistribution = ({
  severityCount,
  highestVulnerabilityCount,
}: Props) => {
  const { critical, high, medium, low, negligible, unknown } = severityCount;
  const totalRowVulnerabilities = getTotalVulnerabilityCount(severityCount);

  const severityLevels = [
    { label: 'Critical', color: SEVERITY_COLORS.CRITICAL, count: critical },
    { label: 'High', color: SEVERITY_COLORS.HIGH, count: high },
    { label: 'Medium', color: SEVERITY_COLORS.MEDIUM, count: medium },
    { label: 'Low', color: SEVERITY_COLORS.LOW, count: low },
    {
      label: 'Negligible',
      color: SEVERITY_COLORS.NEGLIGIBLE,
      count: negligible,
    },
    { label: 'Unknown', color: SEVERITY_COLORS.UNKNOWN, count: unknown },
  ];

  const globalFraction =
    (totalRowVulnerabilities / highestVulnerabilityCount) * 100;
  const getFraction = (count: number) =>
    (count / totalRowVulnerabilities) * 100;

  return (
    <Box
      display="flex"
      height={20}
      width={`${globalFraction}%`}
      borderRadius={1}
      overflow="hidden"
    >
      {severityLevels.map(({ color, count, label }) => {
        const fraction = getFraction(count);
        return (
          <Tooltip title={`${label}: ${count}`} key={label}>
            <Box
              key={label}
              sx={{
                backgroundColor: color,
                width: `${fraction}%`,
                height: '100%',
              }}
            />
          </Tooltip>
        );
      })}
    </Box>
  );
};
