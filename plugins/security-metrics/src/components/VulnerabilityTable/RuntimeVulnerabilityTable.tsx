import { VulnerabilityTable } from './VulnerabilityTable';
import Typography from '@mui/material/Typography';
import { Vulnerability } from '../../typesFrontend';
import { Box } from '@mui/system';
import ThumbUpIcon from '@mui/icons-material/ThumbUp';

type Props = {
  vulnerabilities: Vulnerability[];
  componentName: string;
};

export const RuntimeVulnerabilityTable = ({
  vulnerabilities,
  componentName,
}: Props) => {
  const getClusters = (v: Vulnerability) => {
    const cluster = v.scannerSpecificInfo.sysdigInfo?.cluster;
    if (!cluster) return [];
    return Array.isArray(cluster) ? cluster : [cluster];
  };

  const clusters = Array.from(
    new Set(vulnerabilities.flatMap(getClusters)),
  ).sort();

  const clusterSummaries = clusters.map(clusterName => {
    const list = vulnerabilities.filter(vulnerability =>
      getClusters(vulnerability).includes(clusterName),
    );
    return { clusterName, list };
  });

  return (
    <Box>
      {clusterSummaries.length === 0 ? (
        <Box display="flex" m={2} gap={1}>
          <Typography fontWeight={500}>Ingen sårbarheter funnet</Typography>
          <ThumbUpIcon color="success" fontSize="medium" />
        </Box>
      ) : (
        clusterSummaries.map(({ clusterName, list }) => (
          <Box key={clusterName}>
            <Typography fontWeight="bold" variant="h6" m={2}>
              {clusterName} ({list.length} sårbarhet
              {list.length === 1 ? '' : 'er'})
            </Typography>
            <VulnerabilityTable
              vulnerabilities={list}
              componentName={componentName}
            />
          </Box>
        ))
      )}
    </Box>
  );
};
