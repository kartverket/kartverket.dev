import { useState } from 'react';
import { usePaginationProps } from '../../hooks/usePagination';
import { Vulnerability } from '../../typesFrontend';
import { SortableHeader, sortableHeaders, sortVulnerabilities } from './utils';
import { VulnerabilityTableRow } from './VulnerabilityTableRow';
import TableContainer from '@mui/material/TableContainer';
import Paper from '@mui/material/Paper';
import Table from '@mui/material/Table';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import TableCell from '@mui/material/TableCell';
import TableSortLabel from '@mui/material/TableSortLabel';
import TableBody from '@mui/material/TableBody';
import TableFooter from '@mui/material/TableFooter';
import TablePagination from '@mui/material/TablePagination';
import Tooltip from '@mui/material/Tooltip';
import InfoIcon from '@mui/icons-material/Info';
import Box from '@mui/material/Box';

type Props = {
  vulnerabilities: Vulnerability[];
  componentName: string;
};

export const VulnerabilityTable = ({
  vulnerabilities,
  componentName,
}: Props) => {
  const [sortType, setSortType] = useState<SortableHeader>('Alvorlighetsgrad');
  const [sortDir, setSortDir] = useState<'asc' | 'desc'>('desc');

  const paginationProps = usePaginationProps(vulnerabilities.length);
  const { page, rowsPerPage } = paginationProps;

  return (
    <TableContainer component={Paper}>
      <Table size="small" sx={{ tableLayout: 'fixed', minWidth: 800 }}>
        <TableHead>
          <TableRow>
            <TableCell>Id</TableCell>
            <TableCell width="25%">Beskrivelse</TableCell>
            {sortableHeaders.map(header => (
              <TableCell key={header} sortDirection={sortDir}>
                <Box display="flex" alignItems="center">
                  <TableSortLabel
                    active={sortType === header}
                    direction={sortDir}
                    onClick={() => {
                      setSortDir(sortDir === 'asc' ? 'desc' : 'asc');
                      setSortType(header);
                    }}
                  >
                    {header}
                  </TableSortLabel>
                  {header === 'Dato' && (
                    <Tooltip title="Datoen da skanneren oppdaget sårbarheten">
                      <InfoIcon fontSize="small" sx={{ ml: 0.5 }} />
                    </Tooltip>
                  )}
                  {header === 'Status' && (
                    <Tooltip
                      title="Hva det betyr å akseptere en sårbarhet kan
                                teamet selv definere. Det kan bety at
                                sårbarheten er kjent og reell, men at det er
                                tatt en bevisst beslutning om å ikke fikse den.
                                Å akseptere en sårbarhet er foreløpig ikke
                                reversibelt. Denne funksjonaliteten er ny og
                                work in progress, gjerne send tilbakemeldinger
                                ved å trykke på 'Support'."
                    >
                      <InfoIcon fontSize="small" sx={{ ml: 0.5 }} />
                    </Tooltip>
                  )}
                </Box>
              </TableCell>
            ))}

            <TableCell width="10%" />
          </TableRow>
        </TableHead>
        <TableBody>
          {vulnerabilities
            .sort((a, b) => sortVulnerabilities(a, b, sortType, sortDir))
            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
            .map(vulnerability => (
              <VulnerabilityTableRow
                key={crypto.randomUUID()}
                vulnerability={vulnerability}
                componentName={componentName}
              />
            ))}
        </TableBody>
        <TableFooter>
          <TableRow>
            <TablePagination colSpan={7} {...paginationProps} />
          </TableRow>
        </TableFooter>
      </Table>
    </TableContainer>
  );
};
