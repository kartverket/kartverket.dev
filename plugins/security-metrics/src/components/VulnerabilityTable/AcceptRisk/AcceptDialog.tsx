import { Stack } from '@mui/system';
import { Vulnerability } from '../../../typesFrontend';
import { ErrorBanner } from '../../ErrorBanner';
import Dialog from '@mui/material/Dialog';
import DialogTitle from '@mui/material/DialogTitle';
import DialogContent from '@mui/material/DialogContent';
import TextField from '@mui/material/TextField';
import DialogActions from '@mui/material/DialogActions';
import Button from '@mui/material/Button';
import { useAcceptVulnerabilityQuery } from '../../../hooks/useAcceptVulnerabilityQuery';
import { SpinnerButton } from './SpinnerButton';
import Box from '@mui/material/Box';

interface Props {
  componentName: string;
  vulnerability: Vulnerability;
  openAcceptDialog: boolean;
  handleCloseAcceptDialog: () => void;
  acceptedBy: string;
  comment: string;
  setAcceptedBy: React.Dispatch<React.SetStateAction<string>>;
  setComment: React.Dispatch<React.SetStateAction<string>>;
}

export const AcceptDialog = ({
  componentName,
  vulnerability,
  openAcceptDialog,
  handleCloseAcceptDialog,
  acceptedBy,
  comment,
  setAcceptedBy,
  setComment,
}: Props) => {
  const acceptMutation = useAcceptVulnerabilityQuery(componentName);
  const handleSave = async () => {
    acceptMutation.mutate(
      {
        componentName,
        vulnerabilityId: vulnerability.vulnerabilityId,
        comment,
        acceptedBy,
      },
      {
        onSuccess: handleCloseAcceptDialog,
      },
    );
  };

  return (
    <Dialog open={openAcceptDialog} onClose={() => handleCloseAcceptDialog}>
      <DialogTitle>
        Aksepter sårbarhet {vulnerability.vulnerabilityId}
      </DialogTitle>
      <DialogContent sx={{ overflowY: 'visible' }}>
        <Stack spacing={2}>
          <TextField
            label="Akseptert av"
            value={acceptedBy}
            onChange={e => setAcceptedBy(e.target.value)}
            fullWidth
          />
          <TextField
            label="Kommentar"
            multiline
            minRows={3}
            value={comment}
            onChange={e => setComment(e.target.value)}
            fullWidth
          />
          {acceptMutation.isError && (
            <ErrorBanner errorMessage="Kunne ikke akseptere sårbarhet. Gjerne gi tilbakemelding i #sikkerhetsmetrikker-tilbakemelding under Support dersom problemet vedvarer." />
          )}
        </Stack>
      </DialogContent>
      <DialogActions>
        <Box sx={{ pb: 2, pr: 2 }}>
          <Button onClick={handleCloseAcceptDialog}>Avbryt</Button>
          <SpinnerButton
            variant="contained"
            loading={acceptMutation.isPending}
            onClick={() => {
              handleSave();
            }}
          >
            Lagre
          </SpinnerButton>
        </Box>
      </DialogActions>
    </Dialog>
  );
};
